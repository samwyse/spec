{"__ATTN__": "Do not edit this file; changes belong in the appropriate YAML file.", "depends_on": ["interpolation"], "overview": "Set Delimiter tags are used to change the tag delimiters for all content\nfollowing the tag in the current compilation unit.\n\nThe tag's content MUST be any two non-whitespace sequences (separated by\nwhitespace) EXCEPT an equals sign ('=') followed by the current closing\ndelimiter.\n\nSet Delimiter tags SHOULD be treated as standalone when appropriate.\n(A tag is \"standalone\" when it is the only non-whitespace token on a line.)\n", "tests": [{"data": {"text": "Hey!"}, "desc": "The equals sign (used on both sides) should permit delimiter changes.", "expected": "(Hey!)", "name": "Pair Behavior", "template": "{{=<% %>=}}(<%text%>)"}, {"data": {"text": "It worked!"}, "desc": "Characters with special meaning regexen should be valid delimiters.", "expected": "(It worked!)", "name": "Special Characters", "template": "({{=[ ]=}}[text])"}, {"data": {"data": "I got interpolated.", "section": true}, "desc": "Delimiters set outside sections should persist.", "expected": "[\n  I got interpolated.\n  |data|\n\n  {{data}}\n  I got interpolated.\n]\n", "name": "Sections", "template": "[\n{{#section}}\n  {{data}}\n  |data|\n{{/section}}\n\n{{= | | =}}\n|#section|\n  {{data}}\n  |data|\n|/section|\n]\n"}, {"data": {"data": "I got interpolated.", "section": false}, "desc": "Delimiters set outside inverted sections should persist.", "expected": "[\n  I got interpolated.\n  |data|\n\n  {{data}}\n  I got interpolated.\n]\n", "name": "Inverted Sections", "template": "[\n{{^section}}\n  {{data}}\n  |data|\n{{/section}}\n\n{{= | | =}}\n|^section|\n  {{data}}\n  |data|\n|/section|\n]\n"}, {"data": {"value": "yes"}, "desc": "Delimiters set in a parent template should not affect a partial.", "expected": "[ .yes. ]\n[ .yes. ]\n", "name": "Partial Inheritence", "partials": {"include": ".{{value}}."}, "template": "[ {{>include}} ]\n{{= | | =}}\n[ |>include| ]\n"}, {"data": {"value": "yes"}, "desc": "Delimiters set in a partial should not affect the parent template.", "expected": "[ .yes.  .yes. ]\n[ .yes.  .|value|. ]\n", "name": "Post-Partial Behavior", "partials": {"include": ".{{value}}. {{= | | =}} .|value|."}, "template": "[ {{>include}} ]\n[ .{{value}}.  .|value|. ]\n"}, {"data": {}, "desc": "Surrounding whitespace should be left untouched.", "expected": "|  |", "name": "Surrounding Whitespace", "template": "| {{=@ @=}} |"}, {"data": {}, "desc": "Whitespace should be left untouched.", "expected": " | \n", "name": "Outlying Whitespace (Inline)", "template": " | {{=@ @=}}\n"}, {"data": {}, "desc": "Standalone lines should be removed from the template.", "expected": "Begin.\nEnd.\n", "name": "Standalone Tag", "template": "Begin.\n{{=@ @=}}\nEnd.\n"}, {"data": {}, "desc": "Indented standalone lines should be removed from the template.", "expected": "Begin.\nEnd.\n", "name": "Indented Standalone Tag", "template": "Begin.\n  {{=@ @=}}\nEnd.\n"}, {"data": {}, "desc": "\"\\r\\n\" should be considered a newline for standalone tags.", "expected": "|\r\n|", "name": "Standalone Line Endings", "template": "|\r\n{{= @ @ =}}\r\n|"}, {"data": {}, "desc": "Standalone tags should not require a newline to precede them.", "expected": "=", "name": "Standalone Without Previous Line", "template": "  {{=@ @=}}\n="}, {"data": {}, "desc": "Standalone tags should not require a newline to follow them.", "expected": "=\n", "name": "Standalone Without Newline", "template": "=\n  {{=@ @=}}"}, {"data": {}, "desc": "Superfluous in-tag whitespace should be ignored.", "expected": "||", "name": "Pair with Padding", "template": "|{{= @   @ =}}|"}]}